"User with message number, importing user message data from clickhouse regarding number of news and info messages starred, ignored  and read"

extend schema @link(url: "https://specs.apollo.dev/federation/v2.7", import: ["@key"])

"A particular intergalactic location available for booking"
type Listing @key(fields: "id") {
}

type Query {
"A list of all messages in the database related to the user"
userStarredMessages: [StarredMessage!]!
}

type Mutation {
    "Creates a new message in the database"
    submitMessage(userId: ID! starredMessage: StarredMessageInput): SubmitMessageResponse!
}

# input UpsertUserInput {
#     "User's first name"
#     firstName: String!
#     "User's last name"
#     lastName: String!
#     "Message IDs"
#     starredMessages: [ID!]!

# }

type SubmitMessageResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "Newly created review"
  review: StarredMessage
}

type StarredMessage {
id:ID!
source: String!
message: String!
}

input StarredMessageInput {
    "Source of message"
    source: String!
    "Message contents"
    message: String!
}
